{"version":3,"sources":["Components/SongList.js","Actions/AselectSong.js","Components/SongDetails.js","Components/App.js","Reducers/Reducer.js","index.js"],"names":["SongList","this","props","songs","map","song","style","textAlign","margin","marginLeft","marginTop","float","class","title","duration","onClick","selectSong","className","console","log","renderList","React","Component","connect","state","type","payload","selectedsong","selectedSong","marginRight","App","color","fontSize","combineReducers","action","ReactDOM","render","store","createStore","Reducers","document","querySelector"],"mappings":"2NAIMA,E,2KACY,IAAD,OACT,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAACC,GACzB,OACI,yBACIC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,OAAQC,WAAY,OAAQC,UAAU,OAAQC,MAAO,QAC3FC,MAAM,WAIF,yBAAKA,MAAM,WACX,uBAAGA,MAAM,UAAUP,EAAKQ,OACpB,yBAAKD,MAAM,QACP,0BAAMA,MAAM,QAAZ,qBAEJ,yBAAKA,MAAM,eAAX,yBACuBP,EAAKS,WAGpC,yBAAKF,MAAM,yBACP,4BAAQG,QAAS,kBAAM,EAAKb,MAAMc,WAAWX,IAAOY,UAAU,mBAA9D,e,+BAShB,OAFAC,QAAQC,IAAIlB,KAAKC,MAAMC,OACvBe,QAAQC,IAAIlB,KAAKC,MAAMc,YAChB,6BAAMf,KAAKmB,kB,GA7BHC,IAAMC,WAsCdC,eALS,SAACC,GAErB,OADAN,QAAQC,IAAIK,GACL,CAAErB,MAAOqB,EAAMnB,QAGc,CACpCW,WC1CsB,SAACX,GAEvB,MAAO,CACHoB,KAAK,gBACLC,QAASrB,KDqCFkB,CAEZvB,GEVYuB,eALS,SAACC,GAErB,MAAO,CAAEG,aAAcH,EAAMI,gBAGlBL,EA/BK,SAACrB,GAEjB,OADAgB,QAAQC,IAAIjB,GACRA,EAAMyB,aAGF,yBAAKV,UAAU,UAAUX,MAAO,CAC5BK,MAAO,QAASH,OAAQ,OAAQE,UAAW,OAAQH,UAAW,SAAUsB,YAAY,UAEpF,yBAAKjB,MAAM,WACP,uBAAGA,MAAM,UAAT,wBACA,2BAAKV,EAAMyB,aAAad,OACxB,yBAAKD,MAAM,eAAX,yBAC2BV,EAAMyB,aAAab,YAUnD,iCCbAgB,EARH,WACR,OAAQ,6BAAO,wBAAIxB,MAAO,CAAEyB,MAAO,QAASC,SAAU,QAASzB,UAAU,WAA1D,kBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,QCkBO0B,cAAgB,CAC3B5B,KAvBgB,WAChB,MAAO,CACH,CAAEQ,MAAO,YAAaC,SAAU,QAChC,CAAED,MAAO,gBAAiBC,SAAU,QACpC,CAAED,MAAO,YAAaC,SAAU,QAChC,CAAED,MAAO,cAAeC,SAAU,UAmBtCc,aAbwB,WAAkC,IAAjCA,EAAgC,uDAAjB,KAAMM,EAAW,uCACzD,MAAoB,kBAAhBA,EAAOT,KACAS,EAAOR,QAIPE,KCZfO,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IACzB,kBAAC,EAAD,OAEJC,SAASC,cAAc,Y","file":"static/js/main.937e7c46.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectSong } from '../Actions/AselectSong';\r\n\r\nclass SongList extends React.Component {\r\n    renderList() {\r\n        return this.props.songs.map((song) => {\r\n            return (\r\n                <div /*style={{ marginLeft: '200px', marginTop: '50px', float:'left' }}*/\r\n                    style={{ textAlign: 'center', margin: 'auto', marginLeft: '60px', marginTop:'40px', float: 'left' }}\r\n                    class=\"ui card\">\r\n                    \r\n               \r\n  \r\n                        <div class=\"content\">\r\n                        <a class=\"header\">{song.title}</a>\r\n                            <div class=\"meta\">\r\n                                <span class=\"date\">Released on 2015</span>\r\n                            </div>\r\n                            <div class=\"description\">\r\n                            duration of the Song: {song.duration}\r\n                           </div>\r\n                        </div>\r\n                    <div class=\"right floated content\">\r\n                        <button onClick={() => this.props.selectSong(song)} className=\"ui green button\">Play</button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n        });\r\n    }\r\n    render() {\r\n        console.log(this.props.songs);\r\n        console.log(this.props.selectSong);\r\n        return <div>{this.renderList()}</div>\r\n    }\r\n    \r\n}\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return { songs: state.song };\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    selectSong: selectSong\r\n})(SongList);","//Action Creator\r\nexport const selectSong = (song) => {\r\n    //Return an Action\r\n    return {\r\n        type:'SONG_SELECTED',\r\n        payload: song\r\n    };\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SongDetails = (props) => {\r\n    console.log(props);\r\n    if (props.selectedsong) {\r\n        return (\r\n\r\n            <div className=\"ui card\" style={{\r\n                float: 'right', margin: 'auto', marginTop: '50px', textAlign: 'center', marginRight:'100px'\r\n            }}>\r\n                <div class=\"content\">\r\n                    <a class=\"header\">Current Song Playing</a>\r\n                    <a >{props.selectedsong.title}</a>\r\n                    <div class=\"description\">\r\n                        duration of the Song: {props.selectedsong.duration}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n    else {\r\n        return <div></div>\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return { selectedsong: state.selectedSong }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SongDetails);","import React from 'react';\r\nimport SongList from './SongList';\r\nimport SongDetails from './SongDetails';\r\n\r\nconst App = () => {\r\n    return (<div  ><h1 style={{ color: 'white', fontSize: '100px', textAlign:'center' }}>My PlayList!!!</h1>\r\n        <SongList />\r\n        <SongDetails/>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\n\r\n\r\nconst SongReducer = () => {\r\n    return [\r\n        { title: 'Tum hi ho', duration: '3:25' },\r\n        { title: 'Yahi hoon mai', duration: '3:15' },\r\n        { title: 'Mera Mann', duration: '3:00' },\r\n        { title: 'Paniyoon Sa', duration: '2:45' } \r\n\r\n\r\n    ];\r\n};\r\n\r\nconst selectedSongReducer = (selectedSong = null, action) => {\r\n    if (action.type === 'SONG_SELECTED') {\r\n        return action.payload;\r\n\r\n    }\r\n    else {\r\n        return selectedSong;\r\n    }\r\n\r\n};\r\n\r\nexport default combineReducers({\r\n    song: SongReducer,\r\n    selectedSong: selectedSongReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n\r\nimport App from './Components/App';\r\nimport Reducers from './Reducers/Reducer'\r\n\r\nReactDOM.render(\r\n    <Provider store={createStore(Reducers)}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}